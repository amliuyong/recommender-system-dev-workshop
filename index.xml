<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Recommender System Solution Workshop on Recommender System Solution</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/</link><description>Recent content in Recommender System Solution Workshop on Recommender System Solution</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gcr-solutions.github.io/recommender-system-dev-workshop/index.xml" rel="self" type="application/rss+xml"/><item><title>Create AWS EC2</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/workspace/ec2/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/workspace/ec2/readme/</guid><description>Create new EC2 to deploy all the code Create key pair Go to Key pairs Create a key pair: gcr-rs-dev-workshop-ec2-key Save the key pair to you local disk, eg: ~/Downloads
Open an SSH client, run this command, to ensure your key is not publicly viewable
cd ~/Downloads chmod 400 gcr-rs-dev-workshop-ec2-key.pem Create new EC2 instance Go to CloudFormation
CloudFormation template:https://aws-gcr-rs-sol-workshop-ap-northeast-1-common.s3.ap-northeast-1.amazonaws.com/rs-dev-workshop-code/release/v1/rs-raw-ec2.yaml
Stack name: gcr-rs-dev-workshop-ec2 KeyPairParam: gcr-rs-dev-workshop-ec2-key</description></item><item><title>Install eksctl</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/tools/eksctl/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/tools/eksctl/readme/</guid><description>eksctl is a command line tool for working with EKS clusters that automates many individual tasks. For this workshop you will use a eksctl. Once you install eksctl, you will be ready to get started.
At the terminal command prompt, enter the following two commands:
curl --silent --location &amp;#34;https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz&amp;#34; | tar xz -C /tmp sudo mv /tmp/eksctl /usr/local/bin This will install eksctl in your EC2 environment. To test to make sure the command is installed properly, execute the command:</description></item><item><title>Install kubectl</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/tools/kubectl/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/tools/kubectl/readme/</guid><description>The Kubernetes command-line tool, kubectl, allows you to run commands against Kubernetes clusters. You can use kubectl to deploy applications, inspect and manage cluster resources, and view logs.
At the terminal command prompt, enter the following two commands:
curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl This will install kubectl in your EC2 environment. To test to make sure the command is installed properly, execute the command:</description></item><item><title>Create SSH Key</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/workspace/create-ssh-key/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/workspace/create-ssh-key/readme/</guid><description>Please run this command to generate SSH Key in EC2. This key will be used on the worker node instances to allow ssh access if necessary.
ssh-keygen Press enter 3 times to take the default choices
Upload the public key to your EC2 region:
aws ec2 import-key-pair --key-name &amp;#34;gcr-rs-dev-workshop-key&amp;#34; --public-key-material file://~/.ssh/id_rsa.pub</description></item><item><title>Install kustomize</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/tools/kustomize/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/prerequisite/tools/kustomize/readme/</guid><description>Install Kustomize Kustomize lets you customize raw, template-free YAML files for multiple purposes, leaving the original YAML untouched and usable as is.
Install kustomize for Linux:
curl --silent --location --remote-name \ &amp;#34;https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v3.2.3/kustomize_kustomize.v3.2.3_linux_amd64&amp;#34; &amp;amp;&amp;amp; \ chmod a+x kustomize_kustomize.v3.2.3_linux_amd64 &amp;amp;&amp;amp; \ sudo mv kustomize_kustomize.v3.2.3_linux_amd64 /usr/local/bin/kustomize Verify the install with:
kustomize version You should see the message like below:</description></item><item><title>Develop Online Of Recommender System</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/develop-experience/4_develop_online/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/develop-experience/4_develop_online/readme/</guid><description>In this part, you&amp;rsquo;ll change some code to add two features in online part, and then deploy them to your Recommender System.
Add hot topic Open recommender-system-dev-workshop-code/src/filter/plugins/news/service.py file
Go to line 355 and uncomment below code.
# hot_topic_news_list = self.get_hot_topic_news_list(user_id, hot_topic_count, present_recommend_news_id_list, recommended_news_list) Push your change to your github repo
cd /home/ec2-user/environment/recommender-system-dev-workshop-code/src/filter/plugins/news git pull git add service.py git commit -m &amp;quot;test for online development&amp;quot; git push Go to codebuild project to check gcr-rs-dev-workshop-filter-build, it should be triggered.</description></item><item><title>Develop Offline Of Recommender System</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/develop-experience/5_develop_offline/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/develop-experience/5_develop_offline/readme/</guid><description>Experience recall logic Experience recall without keywords Open recall log GUI
Click 4 ~ 5 news in the recommended list
View recall log in argo GUI
Experience recall with keywords Run below script to change recall config file:
cd /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts ./change-recall-config-offline.sh The old config file:
The new config file:
The recall config file has been changed and offline notified online to load new config file.</description></item></channel></rss>