<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deploy The Online Part on Recommender System Solution</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/</link><description>Recent content in Deploy The Online Part on Recommender System Solution</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/index.xml" rel="self" type="application/rss+xml"/><item><title>Create Online CI</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/create-online-ci/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/create-online-ci/readme/</guid><description>In this step, you&amp;rsquo;ll create AWS codebuild project to build services of Recommender System Online part, including demo,event,filter,loader,portrait,rank,recall,retrieve,ui.
Set your own configuration. In your cloud9 workspace, double click online-code-build-setup.sh file in the cloud9 left sidebar. It looks like below: Replace &amp;lt;github_user_name&amp;gt; with your github account user name. Replace &amp;lt;github_access_token&amp;gt; with your github account personal access token. If you don&amp;rsquo;t have personal access token, please follow creating-a-personal-access-token to create it.</description></item><item><title>Create Infrastructure</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/create-infra/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/create-infra/readme/</guid><description>In this step, you will create Recommender System Online part infrastructure
Go to /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts directory cd /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts Run the command below to create infrastructure, including: eks cluster istio efs elastic cache(redis) ./create-online-infra.sh This will take about 20 minutes to provision
Verify the infrastructre already created successfully: Check EFS created successfully, the console output should like below:
Check elastic cache(redis) created successfully, the console output should like below:</description></item><item><title>Setup Argo cd Server</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/argocd-server/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/argocd-server/readme/</guid><description>In this step, you will setup Argo CD server in EKS cluster
Go to /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts directory cd /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts Run the below command to setup argocd server in eks cluster ./setup-argocd-server.sh This will take about 2 minutes to provision
the console will output user name, password and server endpoint of argocd like below:
Copy endpoint into browser to access argocd server portal, if you are the first time to access this endpoint, click Advanced and Proceed to &amp;hellip;</description></item><item><title>Create Argo cd application</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/create-argocd-app/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/create-argocd-app/readme/</guid><description>In this step, you will create Argo CD application to deploy all online services into EKS cluster
Go to /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts directory cd /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts Run below command to create and deploy online part:= ./create-argocd-application.sh After about 1 minutes, the console will output as below:
Access argo cd portal to check services deployment status. Please make sure all the heart status become green and all the rotating tags become stable!</description></item><item><title>Set Online Config</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/update-online-config/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/deploy/online/update-online-config/readme/</guid><description>In this step, you&amp;rsquo;ll update online services config according to infrastructure created in previous steps.
Go to /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts directory cd /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts Run the command below to update local config, including: Elasticache(Redis) endpoint AccountId Region ./update-online-config.sh Push your change to your github repo through below command: git add ../manifests/envs/news-dev/config.yaml git commit -m &amp;#34;update config&amp;#34; git push</description></item></channel></rss>