<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>设置Workspace on Recommender System Solution</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/</link><description>Recent content in 设置Workspace on Recommender System Solution</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/index.xml" rel="self" type="application/rss+xml"/><item><title>设置 Cloud9</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/cloud9/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/cloud9/readme/</guid><description>AWS Cloud9 是一个基于云的集成开发环境 (IDE)，让您只需一个浏览器即可编写、运行和调试代码。 它包括代码编辑器、调试器和终端。
创建新的Cloud9 IDE 环境 打开 AWS Cloud9 Console 点击地区选择列表并选择 Asia Pacific (Tokyo)ap-northeast-1 点击 Create environment 按钮来创建新的Cloud9环境 命名为 gcr-rs-dev-workshop, 点击 Next 保留所有默认选项, 点击 Next step 与 Create environment 这将需要大约 2 分钟的时间进行配置
当配置完成时，cloud9 控制台环境应该如下所示：
配置 Cloud9 IDE 环境 当环境创建成功后，通过以下方式配置环境：
1 . 关闭所有窗口
2 . 打开一个新的命令行窗口
3 . 在整个workshop部署期间，在浏览器中保持AWS Cloud9的打开状态，因为我们将通过它进行诸如使用 AWS CLI 和运行 Bash 脚本之类的工作。</description></item><item><title>创建 IAM 角色</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/create-role/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/create-role/readme/</guid><description>您需要为 Cloud9 服务创建 IAM 权限, 该权限遵守最小权限设置原则，包含了以下 AWS 服务：
AWS IAM AMAZON S3 AMAZON EKS AWS SecretsManager AWS CodeBuild AWS EFS AWS EC2 AWS Elasticache AWS CloudWatch AWS AutoScaling AWS SSM AWS KMS AWS AutoScaling AWS CloudFormation 首先打开 策略链接, 复制 gcr-rs-role.json 文件中的内容。
打开创建策略的 链接, 在 JSON 栏中粘贴上一步复制的内容，注意: 请将 &amp;lt;account_id&amp;gt; 改为您的AWS 账户 ID。完成后点击下一步。
在策略名字上输入 gcr-rs-dev-workshop-admin-policy， 点击创建策略。
点击创建 IAM 角色的链接, 确认选择了AWS服务和EC2，然后点击下一步查看权限。</description></item><item><title>附加 IAM 角色</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/attach-role/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/attach-role/readme/</guid><description> 在 Cloud9 IDE中，单击灰色圆圈按钮（在右上角）并选择 Manage EC2 Instance。 将打开 EC2 仪表板，选择“aws-cloud9-gcr-rs-dev-workshop-xxx”实例，然后选择 Actions / Security / Modify IAM Role 从 IAM Role 下拉列表中选择 gcr-rs-dev-workshop-admin，然后选择 Save</description></item><item><title>更新 IAM 设置</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/update-role-settings/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/update-role-settings/readme/</guid><description>Cloud9 通常动态管理 IAM 凭证。 这当前与 EKS IAM 身份验证不兼容，因此我们需禁用该动态管理并改为依赖于 IAM 角色。
打开您的 Cloud9 工作区并单击齿轮图标（在右上角） 选择 AWS SETTINGS 关闭 AWS managed temporary credentials 关闭设置 安装 jq 工具
sudo yum -y install jq 为确保没有使用临时证书，我们还将删除所有现有的证书：
rm -vf ${HOME}/.aws/credentials 将当前的区域作为默认区域, 并配置 aws cli。
export ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account) export AWS_REGION=$(curl -s 169.254.169.254/latest/dynamic/instance-identity/document | jq -r &amp;#39;.region&amp;#39;) export REGION=${AWS_REGION} 检查 AWS_REGION 是否设置为所需区域，您应该得到 AWS_REGION is ap-northeast-1
test -n &amp;#34;$AWS_REGION&amp;#34; &amp;amp;&amp;amp; echo AWS_REGION is &amp;#34;$AWS_REGION&amp;#34; || echo AWS_REGION is not set 运行以下命令将相关数据保存到 bash_profile:</description></item><item><title>创建 SSH 密钥</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/create-ssh-key/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/create-ssh-key/readme/</guid><description>请运行此命令在 Cloud9 中生成 SSH 密钥。 如有必要，此密钥将用于工作节点实例以允许 ssh 访问。
ssh-keygen 按回车 3次以采用默认选择
将公钥上传到您的 EC2 实例：
aws ec2 import-key-pair --key-name &amp;#34;gcr-rs-dev-workshop-key&amp;#34; --public-key-material file://~/.ssh/id_rsa.pub</description></item><item><title>在 Cloud9 中设置 GitHub 账户</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/setup-github-config/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/setup-github-config/readme/</guid><description>1.输入以下命令来配置git，请将您的姓名和您的email替换为您的Github帐户信息。
git config --global user.name &amp;quot;Your name here&amp;quot;
git config --global user.email &amp;quot;your_email@example.com&amp;quot;
在 cloud9 上设置 ssh。 输入以下命令查看您是否有文件 ~/.ssh/id_rsa 和 ~/.ssh/id_rsa.pub。 如果没有，请按照 创建 SSH 密钥 来创建 公钥/私钥。 ls ~/.ssh 将您的公钥（ ~/.ssh/id_rsa.pub 文件的内容）复制到剪贴板中。
将 ssh 公钥粘贴到您的 GitHub 帐户中。 打开您的 GitHub Account Settings
单击左侧栏中的 SSH and GPG keys 。
点击右上角的New SSH key。
输入密钥名（如“My Cloud9”）并将公钥粘贴到文本框中。
通过以下命令测试您的配置： ssh -T git@github.</description></item></channel></rss>