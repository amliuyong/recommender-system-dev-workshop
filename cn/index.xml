<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>推荐系统解决方案 on Recommender System Solution</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/</link><description>Recent content in 推荐系统解决方案 on Recommender System Solution</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/index.xml" rel="self" type="application/rss+xml"/><item><title>创建 EC2</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/ec2/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/prerequisite/workspace/ec2/readme/</guid><description>创建一个 AWS EC2 机器，用来部署我们的代码 创建密钥对 打开 创建密钥对（ap-northeast-1) or 创建密钥对 (cn-north-1) 设置名字为: gcr-rs-dev-workshop-ec2-key 保存密钥对文件到本地目录, 例如: ~/Downloads
打开 SSH 客户端, 运行下面命令, 确保您的密钥对对他人不可见
cd ~/Downloads chmod 400 gcr-rs-dev-workshop-ec2-key.pem 创建 EC2 实例 转到 CloudFormation (ap-northeast-1 区域) 或者 CloudFormation (cn-north-1)
CloudFormation 模版:
AWS 全球区域: https://aws-gcr-rs-sol-workshop-ap-northeast-1-common.s3.ap-northeast-1.amazonaws.com/rs-dev-workshop-code/release/v1.1.0/rs-raw-ec2.yaml AWS 中国区域: https://aws-gcr-rs-sol-workshop-cn-north-1-common.s3.cn-north-1.amazonaws.com.cn/rs-dev-workshop-code/release/v1.1.0/cn-rs-raw-ec2.yaml Stack 名字: gcr-rs-dev-workshop-ec2 KeyPairParam: gcr-rs-dev-workshop-ec2-key
点击按钮 &amp;ldquo;下一步&amp;rdquo; -&amp;gt; &amp;ldquo;下一步&amp;rdquo; -&amp;gt; &amp;ldquo;创建&amp;rdquo;</description></item><item><title>开发推荐系统在线部分</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/develop-experience/4_develop_online/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/develop-experience/4_develop_online/readme/</guid><description>在这一部分，您将更改一些代码，并在在线部分添加两个功能，然后将它们部署到您的推荐系统。
添加热点话题 打开recommender-system-dev-workshop-code/src/filter/plugins/news/service.py文件
转到第 355 行并取消注释下面的代码。
# hot_topic_news_list = self.get_hot_topic_news_list(user_id, hot_topic_count, present_recommend_news_id_list, recommended_news_list) 将您的更改推送到您的 github 存储库
cd /home/ec2-user/environment/recommender-system-dev-workshop-code/src/filter/plugins/news git pull git add service.py git commit -m &amp;quot;test for online development&amp;quot; git push 打开 codebuild 项目, 搜索 gcr-rs-dev-workshop-filter-build，并重新构建该项目。
当gcr-rs-dev-workshop-filter-build更新成功后，ArgoCD会在3分钟内部署filter服务，请到ArgoCD查看。
验证：当点击三个新闻后，您将看到推荐列表由冷启动逻辑转换成个性化推荐逻辑。 推荐结果由两部分组成，第一部分是根据您的用户画像中最感兴趣的类型进行的顶级推荐。在这个例子中，由于gcr-rs-admin对娱乐很感兴趣，所以推荐列表的前3行是娱乐新闻：
增加用户画像召回功能。 您刚刚部署的推荐系统只是根据用户的最近点击新闻来进行召回，您将按照以下步骤添加根据用户画像进行召回的功能。 打开/recommender-system-dev-workshop-code/src/recall/plugins/news/service_impl.py文件
找到第 142 行并取消注释下面的代码。
# self.recall_by_portrait(user_portrait, recall_wrap, recall_items, multiple_shot_record) 将您的更改推送到您的 github 存储库</description></item><item><title>开发推荐系统离线部分</title><link>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/develop-experience/5_develop_offline/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gcr-solutions.github.io/recommender-system-dev-workshop/cn/develop-experience/5_develop_offline/readme/</guid><description>体验召回逻辑 体验不含关键词的召回逻辑 在 argo GUI 中查看召回日志
在推荐列表中点击 4 ～ 5 个新闻
在 ArgoCD 网站中查看召回服务日志
体验包含关键词的召回逻辑 运行以下脚本来更改召回配置文件：
cd /home/ec2-user/environment/recommender-system-dev-workshop-code/scripts ./change-recall-config-offline.sh 旧的配置文件：
新的配置文件：
召回配置文件已更改，离线部分通知在线部分加载新的配置文件。点击 Step Function链接 ，搜索 rs-dev-workshop-News-NotificationStepFunc 并等待该步骤函数状态为成功。
此步骤大约需要 4 分钟
再次点击推荐列表中的4~5条新闻
在 argo GUI 中查看召回日志
从日志中，我们可以看到更新了新的配置
可以看到包含关键词的召回日志</description></item></channel></rss>